// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using course_manager.Models;

#nullable disable

namespace course_manager.Data
{
    public partial class course_managerContext : DbContext
    {
        public course_managerContext()
        {
        }

        public course_managerContext(DbContextOptions<course_managerContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Assignment> Assignments { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentsCourse> StudentsCourses { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Assignment>(entity =>
            {
                entity.ToTable("assignment");

                entity.Property(e => e.AssignmentId).HasColumnName("assignment_id");

                entity.Property(e => e.Assignment1)
                    .HasColumnType("text")
                    .HasColumnName("assignment");

                entity.Property(e => e.CourseId).HasColumnName("course_id");

                entity.Property(e => e.StudentId).HasColumnName("student_id");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Assignments)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_course_assignment_id");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.Assignments)
                    .HasForeignKey(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_student_assignment_id");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.ToTable("courses");

                entity.Property(e => e.CourseId).HasColumnName("course_id");

                entity.Property(e => e.CourseCredits).HasColumnName("course_credits");

                entity.Property(e => e.CourseDescription)
                    .HasColumnType("text")
                    .HasColumnName("course_description");

                entity.Property(e => e.CourseName)
                    .HasColumnType("text")
                    .HasColumnName("course_name");

                entity.Property(e => e.TeacherId).HasColumnName("teacher_id");

                entity.HasOne(d => d.Teacher)
                    .WithMany(p => p.Courses)
                    .HasForeignKey(d => d.TeacherId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_teacher_id");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.ToTable("students");

                entity.Property(e => e.StudentId).HasColumnName("student_id");

                entity.Property(e => e.StudentEmail)
                    .HasColumnType("text")
                    .HasColumnName("student_email");

                entity.Property(e => e.StudentFirstname)
                    .HasColumnType("text")
                    .HasColumnName("student_firstname");

                entity.Property(e => e.StudentLastname)
                    .HasColumnType("text")
                    .HasColumnName("student_lastname");

                entity.Property(e => e.StudentPhone)
                    .HasColumnType("text")
                    .HasColumnName("student_phone");
            });

            modelBuilder.Entity<StudentsCourse>(entity =>
            {
                entity.HasKey(e => e.StudentsCoursesId)
                    .HasName("PK__students__8FF13D169A5B1482");

                entity.ToTable("students_courses");

                entity.Property(e => e.StudentsCoursesId).HasColumnName("students_courses_id");

                entity.Property(e => e.CourseId).HasColumnName("course_id");

                entity.Property(e => e.StudentId).HasColumnName("student_id");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.StudentsCourses)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_courses_student");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.StudentsCourses)
                    .HasForeignKey(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_student_id_courses");
            });

            modelBuilder.Entity<Teacher>(entity =>
            {
                entity.ToTable("teachers");

                entity.Property(e => e.TeacherId).HasColumnName("teacher_id");

                entity.Property(e => e.TeacherEmail)
                    .HasColumnType("text")
                    .HasColumnName("teacher_email");

                entity.Property(e => e.TeacherFirstname)
                    .HasColumnType("text")
                    .HasColumnName("teacher_firstname");

                entity.Property(e => e.TeacherLastname)
                    .HasColumnType("text")
                    .HasColumnName("teacher_lastname");

                entity.Property(e => e.TeacherPhone)
                    .HasColumnType("text")
                    .HasColumnName("teacher_phone");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}